{"version":3,"file":"panel.component.d.ts","sources":["panel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, ChangeDetectorRef, ElementRef } from \"@angular/core\";\nimport { ColorFormats } from \"../../enums/formats\";\nimport { ConverterService } from \"../../services/converter.service\";\nimport { NgxColorsTriggerDirective } from \"../../directives/ngx-colors-trigger.directive\";\nimport { Hsva } from \"../../clases/formats\";\nexport declare class PanelComponent implements OnInit {\n    service: ConverterService;\n    private cdr;\n    click(event: any): void;\n    onScroll(): void;\n    onResize(): void;\n    top: number;\n    left: number;\n    panelRef: ElementRef;\n    constructor(service: ConverterService, cdr: ChangeDetectorRef);\n    color: string;\n    previewColor: string;\n    hsva: Hsva;\n    colorsAnimationEffect: string;\n    palette: {\n        color: string;\n        preview: string;\n        variants: string[];\n    }[];\n    variants: any[];\n    colorFormats: string[];\n    format: ColorFormats;\n    canChangeFormat: boolean;\n    menu: number;\n    hideColorPicker: boolean;\n    hideTextInput: boolean;\n    acceptLabel: string;\n    cancelLabel: string;\n    colorPickerControls: \"default\" | \"only-alpha\" | \"no-alpha\";\n    private triggerInstance;\n    private TriggerBBox;\n    isSelectedColorInPalette: boolean;\n    indexSeleccionado: any;\n    positionString: any;\n    temporalColor: any;\n    backupColor: any;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    private onScreenMovement;\n    private findIndexSelectedColor;\n    iniciate(triggerInstance: NgxColorsTriggerDirective, triggerElementRef: any, color: any, palette: any, animation: any, format: string, hideTextInput: boolean, hideColorPicker: boolean, acceptLabel: string, cancelLabel: string, colorPickerControls: \"default\" | \"only-alpha\" | \"no-alpha\", position: \"top\" | \"bottom\"): void;\n    setPosition(): void;\n    private setPositionY;\n    hasVariant(color: any): boolean;\n    isSelected(color: any): boolean;\n    getBackgroundColor(color: any): {\n        background: any;\n    };\n    onAlphaChange(event: any): void;\n    private ChangeAlphaOnPalette;\n    /**\n     * Change color from default colors\n     * @param string color\n     */\n    changeColor(color: string): void;\n    onChangeColorPicker(event: Hsva): void;\n    changeColorManual(color: string): void;\n    setColor(value: Hsva): void;\n    setPreviewColor(value: Hsva): void;\n    hsvaToRgba: any;\n    onChange(): void;\n    onColorClick(color: any): void;\n    addColor(): void;\n    nextFormat(): void;\n    emitClose(status: \"cancel\" | \"accept\"): void;\n    onClickBack(): void;\n    isOutside(event: any): any;\n}\n"]}