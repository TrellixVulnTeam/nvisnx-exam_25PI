{"version":3,"file":"ngx-colors-trigger.directive.d.ts","sources":["ngx-colors-trigger.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ElementRef, ComponentRef } from \"@angular/core\";\nimport { PanelFactoryService } from \"../services/panel-factory.service\";\nimport { PanelComponent } from \"../components/panel/panel.component\";\nimport { ControlValueAccessor } from \"@angular/forms\";\nimport { NgxColor } from \"../clases/color\";\nexport declare class NgxColorsTriggerDirective implements ControlValueAccessor {\n    private triggerRef;\n    private panelFactory;\n    color: string;\n    colorsAnimation: \"slide-in\" | \"popup\";\n    palette: Array<string> | Array<NgxColor>;\n    format: string;\n    position: \"top\" | \"bottom\";\n    hideTextInput: boolean;\n    hideColorPicker: boolean;\n    attachTo: string | undefined;\n    overlayClassName: string | undefined;\n    colorPickerControls: \"default\" | \"only-alpha\" | \"no-alpha\";\n    acceptLabel: string;\n    cancelLabel: string;\n    change: EventEmitter<string>;\n    input: EventEmitter<string>;\n    slider: EventEmitter<string>;\n    onClick(): void;\n    constructor(triggerRef: ElementRef, panelFactory: PanelFactoryService);\n    panelRef: ComponentRef<PanelComponent>;\n    isDisabled: boolean;\n    onTouchedCallback: () => void;\n    onChangeCallback: (_: any) => void;\n    open(): void;\n    close(): void;\n    onChange(): void;\n    setDisabledState(isDisabled: boolean): void;\n    setColor(color: any): void;\n    sliderChange(color: any): void;\n    get value(): string;\n    set value(value: string);\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n}\n"]}