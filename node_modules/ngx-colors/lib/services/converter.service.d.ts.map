{"version":3,"file":"converter.service.d.ts","sources":["converter.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Cmyk, Rgba, Hsla, Hsva } from '../clases/formats';\nimport { ColorFormats } from '../enums/formats';\nexport declare class ConverterService {\n    constructor();\n    toFormat(hsva: Hsva, format: ColorFormats): string;\n    stringToFormat(color: string, format: ColorFormats): string;\n    hsva2hsla(hsva: Hsva): Hsla;\n    hsla2hsva(hsla: Hsla): Hsva;\n    hsvaToRgba(hsva: Hsva): Rgba;\n    cmykToRgb(cmyk: Cmyk): Rgba;\n    rgbaToCmyk(rgba: Rgba): Cmyk;\n    rgbaToHsva(rgba: Rgba): Hsva;\n    rgbaToHex(rgba: Rgba, allowHex8?: boolean): string;\n    normalizeCMYK(cmyk: Cmyk): Cmyk;\n    denormalizeCMYK(cmyk: Cmyk): Cmyk;\n    denormalizeRGBA(rgba: Rgba): Rgba;\n    stringToHsva(colorString?: string, allowHex8?: boolean): Hsva | null;\n    outputFormat(hsva: Hsva): string;\n    getFormatByString(color: string): string;\n}\n"]}